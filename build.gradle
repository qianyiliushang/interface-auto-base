group 'com.zombie'
version '1.1.8'


apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
    agent
}
allprojects {
    repositories {
        maven {
            url "http://192.168.16.214:8081/repository/maven-public/"
        }
        mavenCentral()
    }
}

dependencies {
    agent "org.aspectj:aspectjweaver:1.8.8"
    compile(
            'com.jayway.restassured:rest-assured:2.9.0',
            'com.jayway.restassured:json-schema-validator:2.9.0',
            'com.jayway.restassured:scala-support:2.9.0',
            'org.apache.logging.log4j:log4j-api:2.2',
            'org.apache.logging.log4j:log4j-core:2.2',
            'org.slf4j:slf4j-jdk14:1.7.12',
            'com.alibaba:fastjson:1.2.8',
            'com.google.code.gson:gson:2.3.1',
            'org.codehaus.jackson:jackson-mapper-asl:1.9.11',
            'com.alibaba:fastjson:1.2.8',
            'org.apache.poi:poi:3.14',
            'org.apache.poi:poi-ooxml:3.14',
            'org.apache.poi:poi-ooxml-schemas:3.14',
            'org.apache.poi:poi-scratchpad:3.14',
            'org.testng:testng:6.8.21',
            "ru.yandex.qatools.allure:allure-testng-adaptor:1.5.0-RC1"
    )
    testCompile(

    )
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

task copyJars(type: Copy) {
    from configurations.runtime
    into 'libs'
}

test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

test {
    useTestNG() {
        suiteXmlFiles << new File(rootDir, "testng.xml")
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://192.168.16.214:8081/repository/imo-snapshot/") {
                authentication(userName: "deploy", password: "passw0rd")
            }
            pom.project {
                version = version
                artifactId = rootProject.name
                group = "$project.group"
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = rootProject.name
        pom.groupId = "$project.group"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

